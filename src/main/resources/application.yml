server:
  port: 8088
  tomcat:
    connection-timeout: 180000 # 180초 (클라이언트 연결 유지 시간 SSE는 장기 연결을 유지하므로 heartbeat 주기보다 길어야 함.)

spring:
  sql:
    init:
      mode: always
      continue-on-error: true
  servlet:
    multipart:
      max-file-size: 10MB      # 단일 파일의 최대 크기
      max-request-size: 10MB
  mvc:
    async:
      request-timeout: 600000 # 10분 SSE는 비동기 요청이므로 SseEmitter 타임아웃과 일치시키거나 더 길게 설정.
  #  mail:
  #    host: smtp.naver.com
  #    port: 465
  #    username: ${MAIL_USERNAME}  # 환경 변수에서 불러오기
  #    password: ${MAIL_PASSWORD}  # 환경 변수에서 불러오기
  #    protocol: smtp
  #    properties:
  #      mail:
  #        smtp:
  #          auth: true
  #          ssl:
  #            enable: true

  # database setting
  datasource:
    url: jdbc:mariadb://localhost:3306/auctiondb  # 환경 변수 적용
    username: root
    password: mariadb



  #  cloud:
  #    aws:
  #      credentials:
  #        access-key: ${AWS_ACCESS_KEY}  # 환경 변수
  #        secret-key: ${AWS_SECRET_KEY}  # 환경 변수
  #      region:
  #        static: ap-northeast-2
  #      s3:
  #        bucket: ${AWS_S3_BUCKET}  # 환경 변수
  jpa:
    database-platform: org.hibernate.dialect.MariaDB106Dialect
    hibernate:
      ddl-auto: create  # 운영에서는 `create` 대신 `update` 또는 `none`
    properties:
      hibernate:
        format_sql: true
    database: mysql
    defer-datasource-initialization: true  # sql data추가 yml

# log level setting
logging:
  level:
    root: info
    com.choongang.auction: debug
    org.hibernate.SQL: info

file:
  upload:
    location: C:\auction\uploads

jwt:
  secret-key: L6h/xMxGO53HQmR/OB99qR/y0kTr2CAyaI5RqBIX184= # 환경 변수 적용
  access-token-validity-time: 3600000  # 1시간 (ms)
  refresh-token-validity-time: 604800000 # 7일 (ms)